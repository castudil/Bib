@article{pickaxe,
  author = {Oommen, J. and Altinel, I. K. and Aras, N.},
  title = { Discrete vector quantization for arbitrary distance function estimation },
  year = { 1998 },
  pages = { 496--510 },
  publisher = {  },
  journal = { IEEE Transactions on Systems, Man, and Cybernetics, Part B },
  abstract = { There are currently many vastly different areas of research involving adaptive learning. Among them are the two areas that concern neural networks and learning automata. This paper develops a method by which the general philosophies of vector quantization (VQ) and discretized automata learning can be incorporated for the computation of arbitrary distance functions. The latter is a problem which has important applications in logistics and location analysis. The input to our problem is the set of coordinates of a large number of nodes whose internode arbitrary “distances” have to be estimated. To render the problem interesting, nontrivial, and realistic, we assume that the explicit form of this distance function is both unknown and uncomputable. Unlike traditional operations research methods, which use optimized parametric functional estimators, we have utilized discretized VQ principles to first adaptively polarize the nodes into subregions. Subsequently, the parameters characterizing the subregions are learned by using a variety of methods (including, for academic purposes, a VQ strategy in the meta-domain). After an initial training phase, a system which achieves distance estimation attempts to yield an estimate of any node-pair distance without actually deriving an explicit form for the unknown function. The algorithms have been rigorously tested for the actual road-travel distances involving cities in Turkey and the results obtained are conclusive. Indeed, these present results are the best currently available from any single or hybrid strategy },
  volume = { 28 },
  month = { au},
  issue = {  },
  file = { paper:VQ\\Oommen1998.pdf:PDF },
  owner = {  },
  timestamp = {  },
  url = {  },
  issn = {  },
  keyword = {  }
}
