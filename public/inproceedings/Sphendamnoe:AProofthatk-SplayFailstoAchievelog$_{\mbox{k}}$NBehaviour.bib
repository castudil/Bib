@inproceedings{pickaxe,
  author = {McClurkin, D. J. and Georgakopoulos, G. F.},
  title = { Sphendamnoe: A Proof that k-Splay Fails to Achieve log$_{\mbox{k}}$N Behaviour },
  year = { 2001 },
  booktitle = { Panhellenic Conference on Informatics },
  editor = {},
  pages = { 480-496 },
  publisher = {  },
  doi = {  },
  isbn = {  },
  location = {  },
  abstract = { The splay technique was introduced to cope with biasedness or changeability in data access frequencies, achieving optimality within a small constant factor w.r.t. static trees, without sacrificing log N worst-case behaviour, in an amortized sense. It achieves this through a series of local transformations, starting from the search node and propagating upwards along the search path to the root. It seems plausible that a similar policy, suitably adapted to multi-way trees, could achieve logk N amortized performance (nodes visited), where k is the degree of the tree. Sherk’s k-splay, a generalization of Sleator and Tarjan’s splay technique to multi-way trees, proved to exhibit amortized log2 N behaviour, could be considered the most likely candidate for a multi-way splay-like self-adjusting policy with logk N amortized complexity. We construct a family of k-ary trees having depth k and containing 2k nodes and we show that Sherk’s k-splay applied to the deepest node of any tree in this family always produces another tree in the family. A fractal-like process of replacing leaf-nodes of trees with copies of themselves then allows us to create such trees of arbitrary size for any given k. This provides us with a family of counterexamples for which Sherk’s k-splay always visits log2 N nodes when applied to the deepest node in the tree. },
  bibsource = { DBLP, http://dblp.uni-trier.de },
  crossref = { DBLP:conf/pci/2001 },
  ee = { http://springerlink.metapress.com/openurl.asp?genre=article{\&}issn=0302-9743{\&}volume=2563{\&}spage=480 },
  file = {   },
  owner = {  },
  timestamp = {  },
  url = {  },
  review = {  },
  issn = {  },
  keywords = {  }
}
